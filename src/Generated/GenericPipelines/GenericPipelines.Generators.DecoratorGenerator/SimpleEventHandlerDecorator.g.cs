// <auto-generated/>

#pragma warning disable
#nullable enable

using System;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;

namespace GenericPipelines.Generated.Decorators
{
    [global::System.CodeDom.Compiler.GeneratedCode("GenericPipelines.Generators.DecoratorGenerator", "1.0.0.0")]
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    internal sealed class GenericPipelines_IntegrationTests_SimpleEventHandler_Decorator
        : GenericPipelines.IntegrationTests.ISimpleEventHandler
    {
        private readonly IRequestHandler<GenericPipelines.IntegrationTests.SimpleEvent> _requestHandler;
        
        public GenericPipelines_IntegrationTests_SimpleEventHandler_Decorator(
            GenericPipelines.IntegrationTests.DefaultEventPipeline<GenericPipelines.IntegrationTests.SimpleEvent> pipeline,
            GenericPipelines.IntegrationTests.SimpleEventHandler requestHandler)
        {
            _requestHandler = pipeline.DecorateHandler(requestHandler);
        }
        
        public Task HandleAsync(GenericPipelines.IntegrationTests.SimpleEvent request, CancellationToken ct = default)
        {
            return _requestHandler.HandleAsync(request, ct);
        }
        
        public static void RegisterDecoratedHandler(IServiceCollection services)
        {
            services
                .AddTransient<GenericPipelines.IntegrationTests.SimpleEventHandler>()
                .AddTransient<GenericPipelines.IntegrationTests.ISimpleEventHandler, GenericPipelines_IntegrationTests_SimpleEventHandler_Decorator>();
        }
    }
}

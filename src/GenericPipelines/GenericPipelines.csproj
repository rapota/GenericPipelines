<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <PropertyGroup>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <IsRoslynComponent>true</IsRoslynComponent>
    <!-- Do not include the generator as a lib dependency -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Lesyk.GenericPipelines</PackageId>
    <Authors>Lesyk</Authors>
    <Company>Oleksandr</Company>
    <PackageProjectUrl>https://github.com/rapota/GenericPipelines</PackageProjectUrl>
    <RepositoryUrl>https://github.com/rapota/GenericPipelines</RepositoryUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Description>A lightweight .NET library which allows you to decorate handlers (method invoke) with your own custom middlewares.</Description>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <ItemGroup>
    <!-- Package the generator in the analyzer directory of the nuget package -->
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="..\..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Lesyk.GenericPipelines.Middlewares" Version="1.0.1" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="4.14.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.14.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="8.0.0" />
  </ItemGroup>

</Project>
